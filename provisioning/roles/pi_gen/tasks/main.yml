---
# pi-gen / tasks

- name: install debian pi-gen support packages
  include_tasks: debian.yml
  when: ansible_distribution == 'Debian'

- name: clone pi-gen Github repo
  ansible.builtin.git:
    repo: "{{ pi_gen_repo }}"
    version: "{{ pigen_commit | default('HEAD') }}"
    depth: 1
    dest: "~/build/pi-gen"
  become_user: vagrant
  become: "true"
  register: result_repo
  ignore_errors: "true"

- name: handle apt-cacher-ng archive if file exists
  include_tasks: apt-cacher-ng-archive.yml
  when: result_repo is success

- name: build and run pi-gen apt-cacher-ng Docker container
  docker_compose:
    project_src: "/home/vagrant/build/pi-gen/"
  when: result_docker_service_running is success
  # TODO:
  #   The above `when` does not appear to work as intended. If the
  #   `docker.io` playbook is not run, this still appears to attempt
  #   to play, but one would assume `result_docker_service_running`
  #   would **not** be success, no?

- name: run prepare-pi-gen-for-stage2-luaml script
  ansible.builtin.shell: \
    /vagrant/src/prepare-pi-gen-for-stage2-luaml.sh >/dev/null
  args:
    chdir: /home/vagrant/build/pi-gen/
    creates: stage2-luaml/prerun.sh
  become_user: vagrant
  become: "true"
  register: stage2_luaml
  when: result_repo is success
