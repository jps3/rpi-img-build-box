---
# common / tasks / main

- name: install debian packages
  include_tasks: debian.yml
  when: ansible_distribution == 'Debian'

- name: ensure timezone set to {{ local_timezone }}
  timezone:
    name: "{{ local_timezone }}"

- name: ensure locale {{ local_locale }} exists
  locale_gen:
    name: "{{ local_locale }}"
    state: present

- name: ensure keyboard defaults file uses correct model
  replace:
    path: /etc/default/keyboard
    regexp: '^(XKBMODEL)="[^"]*"'
    replace: '\1="pc104"'
  notify: regenerate keyboard-configuration

- name: ensure keyboard defaults file uses correct layout
  replace:
    path: /etc/default/keyboard
    regexp: '^(XKBLAYOUT)="[^"]*"'
    replace: '\1="us"'
  notify: regenerate keyboard-configuration


# ------------------------------------------------------------------- #
#
#  The following is a fix for the default libvirt Vagrant box
#  from debian/ which does not provide an automagically-resizing
#  root filesystem partition.
#
# ------------------------------------------------------------------- #

- name: identify root filesystem's parent device path
  shell: >-
    findmnt -enU -o SOURCE -t ext4 -M /  |
      xargs lsblk -no pkname
  register: identify_root_fs_parent_device
  when: common_tasks_debian_packages_installed is success


# ------------------------------------------------------------------- #

- name: set fact root_fs_parent_device_path
  set_fact:
    root_fs_parent_device_path: /dev/{{ identify_root_fs_parent_device.stdout_lines[0] }}
  when: identify_root_fs_parent_device.stdout_lines|length > 0


# ------------------------------------------------------------------- #

- name: get stat information for parent device of root fs device
  stat:
    path: "{{ root_fs_parent_device_path }}"
  register: root_fs_parent_device
  when: root_fs_parent_device_path is defined


# ------------------------------------------------------------------- #

# https://github.com/ansible/ansible/issues/23914
- name: get parted information for parent device of root fs device
  parted:
    device: "{{ root_fs_parent_device_path }}"
    number: 1
  register: partinfo
  when: root_fs_parent_device is defined
        and
        root_fs_parent_device is not skipped
        and
        root_fs_parent_device.stat.exists


# ------------------------------------------------------------------- #

- name: set gap_kb fact
  set_fact:
    gap_kb: "{{ partinfo.disk.size - partinfo.partitions[0].end }}"
  when: root_fs_parent_device is defined
        and
        partinfo is not skipped
        and
        partinfo is defined


# ------------------------------------------------------------------- #

- name: resize partition to fill maximum space
  command: >-
    parted
      ---pretend-input-tty
      {{ root_fs_parent_device_path }}
      resizepart 1
      Yes
      100%
  register: resize_partition
  when: gap_kb is defined and gap_kb|int > 1024


# ------------------------------------------------------------------- #

- name: re-read parition table
  command: partprobe {{ root_fs_parent_device_path }}
  register: reread_partition_table
  when: resize_partition is not skipped


# ------------------------------------------------------------------- #

- name: grow root filesystem to fill maximum block size
  filesystem:
    fstype: ext4
    dev: "{{ root_fs_parent_device_path + partinfo.partitions[0].num|string }}"
    resizefs: yes
  register: filesystem_grown
  when: resize_partition is not skipped
